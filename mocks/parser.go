// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Parser is an autogenerated mock type for the Parser type
type Parser struct {
	mock.Mock
}

// ProcessPage provides a mock function with given fields: url, body
func (_m *Parser) ProcessPage(url string, body io.Reader) error {
	ret := _m.Called(url, body)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, io.Reader) error); ok {
		r0 = rf(url, body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewParser creates a new instance of Parser. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewParser(t testing.TB) *Parser {
	mock := &Parser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
